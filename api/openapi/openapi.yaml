openapi: 3.0.0
info:
  title: PVZ API
  version: 1.0.0
  description: API для управления пунктами выдачи заказов (ПВЗ) и приемками товаров

servers:
  - url: http://localhost:8080
    description: Локальный сервер разработки

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Error:
      type: object
      properties:
        error:
          type: string
          description: Описание ошибки

    TokenResponse:
      type: object
      properties:
        token:
          type: string
          description: JWT токен для авторизации

    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        email:
          type: string
          format: email
        role:
          type: string
          enum: [client, moderator]
          description: Тип пользователя (client - обычный пользователь, moderator - модератор)
        created_at:
          type: string
          format: date-time

    PVZ:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        address:
          type: string
        city:
          type: string
        created_at:
          type: string
          format: date-time

    Reception:
      type: object
      properties:
        id:
          type: string
          format: uuid
        pvz_id:
          type: string
          format: uuid
        status:
          type: string
          enum: [open, closed]
        created_at:
          type: string
          format: date-time

    Product:
      type: object
      properties:
        id:
          type: string
          format: uuid
        reception_id:
          type: string
          format: uuid
        name:
          type: string
        quantity:
          type: integer
          minimum: 1
        created_at:
          type: string
          format: date-time

    PVZWithReceptions:
      type: object
      properties:
        pvz:
          $ref: '#/components/schemas/PVZ'
        receptions:
          type: array
          items:
            $ref: '#/components/schemas/Reception'

paths:
  /register:
    post:
      summary: Регистрация пользователя
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
                - role
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  minLength: 6
                role:
                  type: string
                  enum: [client, moderator]
                  description: Тип пользователя
      responses:
        '200':
          description: Успешная регистрация
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
        '400':
          description: Ошибка валидации
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /login:
    post:
      summary: Авторизация пользователя
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
      responses:
        '200':
          description: Успешная авторизация
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
        '401':
          description: Неверные учетные данные
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /dummy-login:
    post:
      summary: Тестовая авторизация
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - role
              properties:
                role:
                  type: string
                  enum: [client, moderator]
                  description: Желаемый тип пользователя
      responses:
        '200':
          description: Успешная авторизация
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
        '400':
          description: Ошибка валидации
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /pvz:
    post:
      summary: Создание ПВЗ
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - address
                - city
              properties:
                name:
                  type: string
                address:
                  type: string
                city:
                  type: string
      responses:
        '201':
          description: ПВЗ создан
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PVZ'
        '400':
          description: Ошибка валидации
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Не авторизован
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    get:
      summary: Получение списка ПВЗ с приемками
      security:
        - BearerAuth: []
      parameters:
        - name: start_date
          in: query
          schema:
            type: string
            format: date-time
        - name: end_date
          in: query
          schema:
            type: string
            format: date-time
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 10
      responses:
        '200':
          description: Список ПВЗ
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PVZWithReceptions'
        '401':
          description: Не авторизован
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /reception:
    post:
      summary: Создание приемки
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - pvz_id
              properties:
                pvz_id:
                  type: string
                  format: uuid
      responses:
        '201':
          description: Приемка создана
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reception'
        '400':
          description: Ошибка валидации
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Не авторизован
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /reception/{id}/close:
    post:
      summary: Закрытие приемки
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Приемка закрыта
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reception'
        '400':
          description: Ошибка валидации
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Не авторизован
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /reception/{id}/product:
    post:
      summary: Добавление товара
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - quantity
              properties:
                name:
                  type: string
                quantity:
                  type: integer
                  minimum: 1
      responses:
        '201':
          description: Товар добавлен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Ошибка валидации
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Не авторизован
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      summary: Удаление последнего товара
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Товар удален
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Ошибка валидации
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Не авторизован
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /reception/{id}/products:
    get:
      summary: Получение списка товаров приемки
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Список товаров
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        '400':
          description: Ошибка валидации
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Не авторизован
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error' 